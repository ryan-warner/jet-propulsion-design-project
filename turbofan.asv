classdef turbofan
    properties
        flightMach
        fuelAirRatio
        bleedRatio
        bypassRatio
        fanStagnationPressureRatio
        compressorStagnationPressureRatio
        
        % Required Components
        diffuser
        fan
        compressor
        combustor
        turbine
        fanTurbine
        coreNozzle
        fanNozzle

        % Optional Components
        afterburner
        combinedNozzle

        % Virtual Components
        bleedAirMixer
        nozzleMixer

        ambientPressure
        ambientTemperature
        exitPressure
        exitTemperature
    end

    methods
        function obj = turbofan(ambientPressure, ambientTemperature)
            obj.ambientPressure = ambientPressure;
            obj.ambientTemperature = ambientTemperature;

            % Create Stages
            obj.diffuser = diffuser(0.92, 1.4);
            obj.fan = fan(0.90, 1.4, 245);
            obj.compressor = compressor(1.38, 0.9);
            obj.combustor = burner(0.98, 1.33, 0.99, 45000000, 0.12, 700);
            obj.turbine = turbine(0.92, 1.33, 1300, 700, 0.12);
            obj.bleedAirMixer = bleedAirMixer(1.34);
            obj.fanTurbine = fanTurbine(0.92, 1.33, 1.4);
            obj.afterburner = afterburner(1.32, 0.96, 2200, 45000000);
            obj.coreNozzle = coreNozzle(0.95, 1.35, obj.ambientPressure);
            obj.fanNozzle = fanNozzle(0.97, 1.4, obj.ambientPressure);
            obj.nozzleMixer = nozzleMixer(0.80);
            obj.combinedNozzle = combinedNozzle(0.95, 1.37, 45000000, obj.ambientPressure);
        end

        function obj = engineCalc(obj, fuelAirRatio, bleedRatio, flightMach, fanStagnationPressureRatio, bypassRatio, compressorStagnationPressureRatio)
            obj.fuelAirRatio = fuelAirRatio;
            obj.flightMach = flightMach;
            obj.bleedRatio = bleedRatio;
            obj.fanStagnationPressureRatio = fanStagnationPressureRatio;
            obj.compressorStagnationPressureRatio = compressorStagnationPressureRatio;
            obj.bypassRatio = bypassRatio;
            
            % Stage Calculations
            obj.diffuser = obj.diffuser.temperatureChange(obj.ambientTemperature, obj.flightMach);
            obj.diffuser = obj.diffuser.pressureChange(obj.ambientPressure);

            obj.fan = obj.fan.temperatureChange(obj.diffuser.temperatureFinal, obj.bypassRatio, obj.fanStagnationPressureRatio);
            obj.fan = obj.fan.pressureChange(obj.diffuser.pressureFinal);
            obj.fan = obj.fan.workCalc();

            obj.compressor = obj.compressor.temperatureChange(obj.fan.temperatureFinal, obj.compressorStagnationPressureRatio);
            obj.compressor = obj.compressor.pressureChange(obj.fan.pressureFinal);
            obj.compressor = obj.compressor.workCalc();

            obj.combustor = obj.combustor.temperatureChange(obj.compressor.temperatureFinal, 1300, obj.bleedRatio, obj.fuelAirRatio);
            obj.combustor = obj.combustor.pressureChange(obj.compressor.pressureFinal);
            obj.combustor = obj.combustor.maxFuelAirRatioCalc();

            obj.turbine = obj.turbine.temperatureChange(obj.combustor.temperatureFinal, obj.compressor.temperatureFinal, obj.compressor.temperatureInitial, )

            %obj.nozzle = obj.nozzle.temperatureChange(obj.combustor.temperatureFinal, obj.combustor.pressureFinal);
            %obj.nozzle = obj.nozzle.velocityCalc();

        
        end
    end

end